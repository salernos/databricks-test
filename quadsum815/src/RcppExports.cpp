// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// quadsumB
double quadsumB(NumericVector x, NumericVector y, NumericMatrix A, int blkSize);
RcppExport SEXP _quadsum815_quadsumB(SEXP xSEXP, SEXP ySEXP, SEXP ASEXP, SEXP blkSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type blkSize(blkSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(quadsumB(x, y, A, blkSize));
    return rcpp_result_gen;
END_RCPP
}
// quadsumC
double quadsumC(NumericVector x, NumericVector y, NumericMatrix A);
RcppExport SEXP _quadsum815_quadsumC(SEXP xSEXP, SEXP ySEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(quadsumC(x, y, A));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_quadsum815_quadsumB", (DL_FUNC) &_quadsum815_quadsumB, 4},
    {"_quadsum815_quadsumC", (DL_FUNC) &_quadsum815_quadsumC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_quadsum815(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
